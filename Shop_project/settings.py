"""
Django settings for Shop_project project.

Generated by 'django-admin startproject' using Django 3.2.5.

For more information on this file, see
https://docs.djangoproject.com/en/3.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.2/ref/settings/
"""

from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-(r7i8b8j(#!(jak1x-!v@sykue!0ge!np%tw7ot871noeyn@0q'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'rest_framework',
    'Core',
    'Product',
    'Customer',
    'Order',
    'Cart',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    # 'Core.middleware.TimeMiddleware',
]

ROOT_URLCONF = 'Shop_project.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / 'templates']
        ,
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'Shop_project.wsgi.application'


# Database
# https://docs.djangoproject.com/en/3.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql_psycopg2',
        'NAME': 'Shop',
        'USER': 'hossein',
        'PASSWORD': 'Hgh@9877',
        'HOST': '127.0.0.1',
        'PORT': '5432',
    }
}


# Password validation
# https://docs.djangoproject.com/en/3.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'Asia/Tehran'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.2/howto/static-files/

STATIC_URL = '/static/'
STATICFILES_DIRS = [
    BASE_DIR / "static"
]


# Default primary key field type
# https://docs.djangoproject.com/en/3.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

LOCALE_PATHS = [BASE_DIR/'locale']


MEDIA_URL = '/media/'
MEDIA_ROOT = BASE_DIR / 'media/'

AUTH_USER_MODEL = "Core.User"

LOGIN_URL = 'Customer:login'
LOGIN_REDIRECT_URL = 'Customer:dashboard'
LOGOUT_REDIRECT_URL = 'Product:home'


# from logging import LogRecord
#
#
# def length_limit(record: LogRecord) -> bool:
#     return len(record.getMessage()) > 20
#
#
# LOGGING = {
#     'version': 1,
#     'disable_exiting_loggers': False,
#     'formatters': {
#         'short': {
#             'format': '{levelname} : {asctime} {message}',
#             'style': '{',
#         },
#         'verbose': {
#             'format': '{levelname} : {message} at {module} (process: {process}, thread: {thread})',
#             'style': '{',
#         },
#     },
#     'filters': {
#         'length_limit': {
#             '()': 'django.utils.log.CallbackFilter',
#             'callback': length_limit,
#         },
#     },
#     'handlers': {
#         'my-console': {
#             'class': 'logging.StreamHandler',
#             'formatter': 'short',
#             'filters': ['length_limit'],
#         },
#         'my-file': {
#             'class': 'logging.FileHandler',
#             'formatter': 'verbose',
#             'file_name': BASE_DIR / 'log/logs.log',
#         },
#     },
#     'root': {
#         'handlers': ['my-console'],
#         'level': 'DEBUG'
#     },
#     'loggers': {
#         'project': {
#             'handlers': ['my-file'],
#             'level': 'ERROR',
#             'propagate': True,
#         },
#         'project.developers': {
#             'handlers': ['my-file'],
#             'level': 'DEBUG',
#             'propagate': False,
#         },
#     },
# }
